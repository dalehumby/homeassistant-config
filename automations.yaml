- id: update_morning_commute_sensor
  alias: Update morning commute time
  trigger:
  - platform: time_pattern
    minutes: /5
  condition:
  - condition: time
    after: "06:00:00"
    before: "11:00:00"
  - condition: state
    entity_id: "binary_sensor.workday_sensor"
    state: "on"
  action:
  - service: homeassistant.update_entity
    target:
      entity_id: sensor.work_commute
  mode: restart

- id: arrive_home
  alias: "Arrive Home"
  trigger:
    - platform: zone
      entity_id: person.dale
      zone: zone.home
      event: enter
  action:
    service: notify.mobile_app_dales_iphone
    data:
      message: "Welcome home"

- id: sunset
  alias: "Turn on lounge lights at dusk"
  trigger:
    - platform: state
      entity_id: sensor.illuminance
      to: "dusk"
  action:
    service: scene.turn_on
    target:
      entity_id: scene.evening

- id: internet_down
  alias: "Internet down"
  trigger:
    - platform: state
      entity_id: binary_sensor.internet
      to: "off"
  action:
    service: notify.mobile_app_dales_iphone
    data:
      message: "Internet is down"

- id: internet_up
  alias: "Internet up"
  trigger:
    - platform: state
      entity_id: binary_sensor.internet
      to: "on"
  action:
    service: notify.mobile_app_dales_iphone
    data:
      message: "Internet is up"

- id: location_change_debug
  alias: Push notification when room location changes
  trigger:
    - platform: state
      entity_id: sensor.dale_apple_watch_presence
  action:
    service: notify.mobile_app_dales_iphone
    data:
      message: "Room {{ states('sensor.dale_apple_watch_presence') }}"

- id: easy_wakeup_gym
  alias: "Turn on bedroom lights gym alarm"
  trigger:
    - platform: template
      value_template: "{{ state_attr('calendar.gym', 'offset_reached') }}"
  action:
    service: light.turn_on
    target:
      entity_id: light.bedside_lights

- id: brighten_kitchen_lights
  alias: "Brighten kitchen lights when working in kitchen"
  trigger:
    - platform: state
      entity_id: binary_sensor.pir_kitchen_occupancy
      from: "off"
      to: "on"
  condition:
    - condition: state
      entity_id: sensor.illuminance
      state: "dark"
  action:
    - service: scene.create
      data:
        scene_id: kitchen_before
        snapshot_entities:
          - light.kitchen_lights
    - service: light.turn_on
      target:
        entity_id: light.kitchen_lights
      data:
        brightness: 255
        color_temp: 153

- id: restore_kitchen_lights
  alias: "Restore kitchen lights when done in kitchen"
  trigger:
    - platform: state
      entity_id: binary_sensor.pir_kitchen_occupancy
      from: "on"
      to: "off"
  condition:
    - condition: state
      entity_id: sensor.illuminance
      state: "dark"
  action:
    - service: scene.turn_on
      data:
        entity_id: scene.kitchen_before

# Fixes issue where you 1) trigger snapshot, 2) change the scene, 3) PIR timer expires 
# and resets to the old scene instead of new scene
# Need 5s delay so scene changes before snapshotting
- id: fix_kitchen_lights_saved_scene
  alias: "Snapshot new scene for kitchen lights"
  trigger:
    - platform: event
      event_type: call_service
      event_data:
        service_data:
          entity_id: scene.relax
        domain: scene
        service: turn_on
    - platform: event
      event_type: call_service
      event_data:
        service_data:
          entity_id: scene.goodnight
        domain: scene
        service: turn_on
  action:
    - delay: 5
    - service: scene.create
      data:
        scene_id: kitchen_before
        snapshot_entities:
          - light.kitchen_lights

- id: set_kitchen_lights_brightness
  alias: Dimmer sets kitchen lights brightness
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/Kitchen dimmer
  condition:
    - condition: template
      value_template: "{{ trigger.payload_json.action in ['rotate_left', 'rotate_right', 'rotate_stop'] }}"
  action:
    - service: light.turn_on
      target:
        entity_id: light.kitchen_lights
      data_template:
        brightness: >
          {{ trigger.payload_json.brightness }}

- id: toggle_kitchen_lights
  alias: Dimmer toggle kitchen lights
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/Kitchen dimmer/action
    payload: "play_pause"
  action:
    - service: light.toggle
      target:
        entity_id: light.kitchen_lights

- id: netflix_dim_lights
  alias: "Dim lights when Netflix plays"
  trigger:
    - platform: state
      entity_id: media_player.apple_tv
      to: "playing"
      for: "00:00:10"
  condition:
    - condition: state
      entity_id: light.lounge_lights
      state: "on"
    - condition: state
      entity_id: media_player.apple_tv
      attribute: app_id
      state: "com.netflix.Netflix"
    - condition: numeric_state
      entity_id: media_player.apple_tv
      attribute: media_position
      above: 5  # Only when playing movie/series, not trailer
    - condition: time
      after: "20:00"  # Not while eating TODO find another way, maybe using camera+object detection?
  action:
    - service: scene.turn_on
      data:
        entity_id: scene.relax

- id: openuv_update_index
  alias: "Update OpenUV every 30 minutes during day"
  trigger:
    platform: time_pattern
    minutes: "/30"
  condition:
    - condition: state
      entity_id: sensor.illuminance
      state: 
        - "gloomy"
        - "bright"
  action:
    service: openuv.update_uv_index_data

- id: openuv_update_protection_window
  alias: "Update OpenUV protection window once a day"
  trigger:
    platform: time
    at: "02:12:00"
  action:
    service: openuv.update_protection_data

- id: gloomy_day_lights_on
  alias: "Turn on lights when it's a gloomy day"
  trigger:
    - platform: state
      entity_id: sensor.illuminance
      to: "gloomy"
  condition:
    - condition: state
      entity_id: sensor.illuminance
      state: 
        - "gloomy"
        - "dawn"
  action:
    - service: scene.turn_on
      data:
        entity_id: scene.gloomy_day

- id: bright_day_lights_off
  alias: "Turn off lights when it's a bright day"
  trigger:
    - platform: state
      entity_id: sensor.illuminance
      to: "bright"
      for: "00:30:00"
  action:
    - service: scene.turn_on
      data:
        entity_id: scene.bright_day

- id: dale_apple_watch_device_tracker
  alias: Dale Apple Watch Tracker
  trigger:
    - platform: state
      entity_id: binary_sensor.dale_bedroom_presence
    - platform: state
      entity_id: binary_sensor.dale_lounge_presence
  action:
    - service: device_tracker.see
      data:
        dev_id: dale_apple_watch
        location_name: >
          {% if is_state("binary_sensor.dale_bedroom_presence", "on") 
             or is_state("binary_sensor.dale_lounge_presence", "on") %}
            home
          {% elif is_state("binary_sensor.dale_bedroom_presence", "off") 
             and is_state("binary_sensor.dale_lounge_presence", "off") %}
            not_home
          {% else %}
            unknown
          {% endif %}
        source_type: "bluetooth_le"

- id: smoke_detected
  alias: Smoke detected
  trigger:
    platform: state
    entity_id: binary_sensor.air_quality
  action:
    - service: notify.mobile_app_dales_iphone
      data:
        message: "Bad indoor air quality"
    - service: tts.google_cloud_say
      entity_id:
        - media_player.kitchen_display
        - media_player.bedroom_speaker
        - media_player.lounge_speaker
      data_template:
        message: "{{ states('sensor.greeting') }}. Smoke has been detected. Consider closing doors and windows"

- id: brighten_entrance_lights
  alias: "Turn on light when in entrance"
  trigger:
    - platform: state
      entity_id: binary_sensor.entrance_pir_occupancy
      from: "off"
      to: "on"
  action:
    - service: light.turn_on
      target:
        entity_id: light.entrance_overhead
      data:
        brightness: 255

- id: dim_entrance_lights
  alias: "Dim light when leave entrance"
  trigger:
    - platform: state
      entity_id: binary_sensor.entrance_pir_occupancy
      from: "on"
      to: "off"
  action:
    - service: light.turn_on
      target:
        entity_id: light.entrance_overhead
      data_template:
        brightness: "{{ min(75, (state_attr('light.foyer_overhead','brightness') | int(0))) }}"
        transition: 5

- id: laundry_start
  alias: Laundry timer started
  trigger:
    - platform: tag
      tag_id: f0a4261e-287b-481d-a93f-1bb33b2de291
  action:
    - service: notify.family
      data:
        title: "Laundry timer started"
        message: "Reminder in {{ state_attr('timer.laundry','duration') }}"
    - service: timer.start
      target:
        entity_id: timer.laundry

- id: laundry_done_reminder
  alias: Laundry is done
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.laundry
  action:
    - service: notify.family
      data:
        message: "Laundry done"
    - service: tts.google_cloud_say
      entity_id:
        - media_player.kitchen_display
        - media_player.bedroom_speaker
        - media_player.lounge_speaker
      data_template:
        message: "{{ states('sensor.greeting') }}. The laundry is done"

- id: rainfall_alert_morning
  alias: Rainfall on the way to work
  trigger:
    - platform: numeric_state
      entity_id: sensor.precipitation_next_hour
      above: 0
    - platform: time
      at: "08:15:00"
  condition:
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: "on"
    - condition: zone
      entity_id: person.dale
      zone: zone.home
    - condition: time
      after: "08:15:00"
      before: "10:00:00"
    - condition: numeric_state
      entity_id: sensor.precipitation_next_hour
      above: 0
  action:
    service: notify.mobile_app_dales_iphone
    data:
      title: "Rainfall"
      message: "{{ states('sensor.precipitation_next_hour') }} mm in next hour"

- id: rainfall_alert_afternoon
  alias: Rainfall on the way home
  trigger:
    - platform: time
      at: "17:00:00"
    - platform: numeric_state
      entity_id: sensor.precipitation_next_hour
      above: 0
  condition:
    - condition: zone
      entity_id: person.dale
      zone: zone.work
    - condition: time
      after: "17:00:00"
    - condition: numeric_state
      entity_id: sensor.precipitation_next_hour
      above: 0
  action:
    service: notify.mobile_app_dales_iphone
    data:
      title: "Rainfall"
      message: "{{ states('sensor.precipitation_next_hour') }} mm in next hour"

- id: rainfall_alert_away
  alias: Rain alert while outdoors
  trigger:
    - platform: numeric_state
      entity_id: sensor.precipitation_next_hour
      above: 0
  condition:
    - condition: state
      entity_id: person.dale
      state: "not_home"
    - condition: not
      conditions:
        - condition: state
          entity_id: sensor.dales_iphone_connection_type
          state: "Wi-Fi"
  action:
    service: notify.mobile_app_dales_iphone
    data:
      title: "Rainfall alert"
      message: "{{ states('sensor.precipitation_next_hour') }} mm in next hour"

- id: lunch_reminer_on
  alias: Turn on lunch reminder
  trigger:
    - platform: tag
      tag_id: 9c666023-7e07-491d-be90-c8be0d53b3b5
  condition:
    - condition: time
      after: "18:00:00"
  action:
    - service: automation.turn_on
      target:
        entity_id: automation.lunch_reminder
    - service: tts.google_cloud_say
      entity_id: media_player.kitchen_display
      data_template:
        message: "Okay, I'll remind you about your lunch tomorrom morning."

- id: lunch_reminer_off
  alias: Turn off lunch reminder
  trigger:
    - platform: tag
      tag_id: 9c666023-7e07-491d-be90-c8be0d53b3b5
  condition:
    - condition: time
      before: "10:00:00"
  action:
    - service: automation.turn_off
      target:
        entity_id: automation.lunch_reminder

- id: lunch_reminder
  alias: Lunch reminder
  trigger:
    - platform: state
      entity_id: binary_sensor.entrance_pir_occupancy
      from: "off"
      to: "on"
  condition:
    - condition: time
      before: "10:00:00"
  action:
    - service: light.turn_on
      data:
        effect: okay
      target:
        entity_id: light.entrance_overhead
    - service: notify.mobile_app_dales_iphone
      data:
        message: "Remember your lunch"
    - service: automation.turn_off
      target:
        entity_id: automation.lunch_reminder

- id: dishwasher_leak
  alias: Dishwasher leak
  trigger:
    - platform: state
      entity_id: binary_sensor.dishwasher_leak_water_leak
      from: "off"
      to: "on"
  action:
    - service: notify.family
      data:
        title: "Dishwasher leak"
        message: "Water detected under the dishwasher"
        data:
          push:
            interruption-level: critical
    - service: tts.google_cloud_say
      entity_id:
        - media_player.kitchen_display
        - media_player.bedroom_speaker
        - media_player.lounge_speaker
      data_template:
        message: >
          "{{ states('sensor.greeting') }}. Water has been detected under the dishwasher.
           Please check for leaks... The shutoff valve is on the kitchen sink tap"

- id: start_robot_vacuum
  alias: Start robot vacuum when leave home
  trigger:
    - platform: state
      entity_id: binary_sensor.home_occupancy
      from: "on"
      to: "off"
  condition:
    - condition: state
      entity_id: input_boolean.run_vacuum_today
      state: "on"
  action:
    - service: vacuum.start
      target:
        entity_id: vacuum.vader

- id: run_vacuum_once_per_day
  alias: Run vacuum once per day
  trigger:
    - platform: state
      entity_id: vacuum.vader
      to: "cleaning"
  action:
    - service: input_boolean.turn_off
      target:
        entity_id: input_boolean.run_vacuum_today

- id: reset_run_vacuum_today
  alias: Reset run vacuum today
  trigger:
    - platform: time
      at: "03:00:00"
  action:
    - service: input_boolean.turn_on
      target:
        entity_id: input_boolean.run_vacuum_today

- id: fill_vacuum_water
  alias: Clean vacuum bin and fill water
  trigger:
    - platform: state
      entity_id: vacuum.vader
      from: "cleaning"
      to: "returning"
  condition:
    - condition: state
      entity_id: binary_sensor.vader_water_shortage
      state: "on"
    - condition: numeric_state
      entity_id: sensor.vader_current_clean_duration
      above: 600
  action:
    - service: xiaomi_miio.vacuum_goto
      target:
        entity_id: vacuum.vader
      data:
        x_coord: '27500'
        y_coord: '29500'
    - wait_for_trigger:
      - platform: state
        entity_id: vacuum.vader
        to: "idle"
    - service: vacuum.locate
      target:
        entity_id: vacuum.vader


# NOTE: Aqara Cube automations
- id: cube_working
  alias: Cube Working scene
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/Lounge Cube
  condition:
    - condition: template
      value_template: "{{ trigger.payload_json.side == 4 }}"
    - condition: template
      value_template: "{{ trigger.payload_json.action in ['flip90', 'flip180', 'shake', 'tap'] }}"
  action:
    - service: scene.turn_on
      data:
        entity_id: scene.working

- id: cube_relax
  alias: Cube Relax scene
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/Lounge Cube
  condition:
    - condition: template
      value_template: "{{ trigger.payload_json.side == 5 }}"
    - condition: template
      value_template: "{{ trigger.payload_json.action in ['flip90', 'flip180', 'shake', 'tap'] }}"
  action:
    - service: scene.turn_on
      data:
        entity_id: scene.relax

- id: cube_light_brightness
  alias: Cube Dim/Brighten lights
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/Lounge Cube
  condition:
    - condition: template
      value_template: "{{ trigger.payload_json.side in [4, 5] }}"
    - condition: template
      value_template: "{{ trigger.payload_json.action in ['rotate_right', 'rotate_left'] }}"
  action:
    - service: light.turn_on
      target:
        entity_id: light.downstairs_lights
    - service: light.turn_on
      target:
        entity_id: light.downstairs_lights
      data_template:
        brightness: >
          {{ state_attr('light.downstairs_lights', 'brightness') + trigger.payload_json.angle }}


- id: cube_spotify_playlist
  alias: Cube Play Spotify Playlist
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/Lounge Cube
  condition:
    - condition: template
      value_template: "{{ trigger.payload_json.side in [0, 1, 3] }}"
    - condition: template
      value_template: "{{ trigger.payload_json.action in ['flip90', 'flip180', 'shake'] }}"
  action:
    - service: media_player.select_source
      target:
        entity_id: media_player.spotify_dale
      data:
        source: Living Room
    - service: media_player.play_media
      target:
        entity_id: media_player.spotify_dale
      data_template:
        media_content_id: >
          {% if trigger.payload_json.side == 0 %} {{ states('sensor.daily_playlist') }}
          {% elif trigger.payload_json.side == 1 %} https://open.spotify.com/playlist/5MO7OaQ75LzdNSplw5bgx7?si=6f21a442c46f44df
          {% elif trigger.payload_json.side == 3 %} https://open.spotify.com/playlist/7wAfsBNYW7JZuXxmlEhMHW?si=cabe23ee1bfb42ce
          {% endif %}
        media_content_type: playlist

- id: cube_spotify_play_pause
  alias: Cube Play/Pause Spotify
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/Lounge Cube
  condition:
    - condition: template
      value_template: "{{ trigger.payload_json.side in [0, 1, 3] }}"
    - condition: template
      value_template: "{{ trigger.payload_json.action in ['tap'] }}"
  action:
    - service: media_player.select_source
      target:
        entity_id: media_player.spotify_dale
      data:
        source: Living Room
    - service: media_player.media_play_pause
      target:
        entity_id: media_player.spotify_dale

- id: cube_next_track
  alias: Cube next Spotify track
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/Lounge Cube
  condition:
    - condition: template
      value_template: "{{ trigger.payload_json.side in [0, 1, 3] }}"
    - condition: template
      value_template: "{{ trigger.payload_json.action in ['slide'] }}"
  action:
    - service: media_player.media_next_track
      target:
        entity_id: media_player.spotify_dale


- id: lounge_styrbar_down
  alias: Lounge Styrbar brightness down
  trigger:
    - platform: mqtt
      topic: zigbee2mqtt/Lounge button/action
      payload: "off"
  action:
    - service: light.turn_off
      target:
        entity_id: 
          - light.lounge_lights
          - light.hall_lights

- id: lounge_styrbar_down_hold
  alias: Lounge Styrbar brightness down hold
  trigger:
    - platform: mqtt
      topic: zigbee2mqtt/Lounge button/action
      payload: "brightness_move_down"
  action:
    - service: light.turn_on
      target:
        entity_id: 
          - light.lounge_lights
          - light.hall_lights
      data:
        brightness: 75
        color_temp: 370
        transition: 3

- id: lounge_styrbar_up
  alias: Lounge Styrbar brightness up
  trigger:
    - platform: mqtt
      topic: zigbee2mqtt/Lounge button/action
      payload: "on"
    - platform: mqtt
      topic: zigbee2mqtt/Lounge button/action
      payload: "brightness_move_up"
  action:
    - service: light.turn_on
      target:
        entity_id: light.lounge_lights
      data:
        brightness: 255

- id: bedroom_closet_light
  alias: Bedroom closet light
  trigger:
    - platform: state
      entity_id: binary_sensor.bedroom_closet_pir_occupancy
      to: "on"
    - platform: state
      entity_id: binary_sensor.bedroom_closet_pir_occupancy
      to: "off"
      for: "00:01:00"
  action:
    - service: "light.turn_{{ trigger.to_state.state }}"
      data:
        transition: 1
      target:
        entity_id: light.bedroom_closet


