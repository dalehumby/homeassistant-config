- id: update_morning_commute_sensor
  alias: Commute - Update morning commute sensor
  trigger:
  - platform: time_pattern
    minutes: /5
  condition:
  - condition: time
    after: "06:00:00"
    before: "11:00:00"
  - condition: state
    entity_id: "binary_sensor.workday_sensor"
    state: "on"
  action:
  - service: homeassistant.update_entity
    entity_id: sensor.work_by_car
  mode: restart

- id: arrive_home
  alias: "Arrive Home"
  trigger:
    - platform: state
      entity_id: person.dale
      to: "home"
  action:
    service: notify.mobile_app_dales_iphone_xs
    data:
      message: "Welcome home"

- id: sunset
  alias: "Turn on lights at dusk"
  trigger:
    platform: numeric_state
    entity_id: sun.sun
    value_template: "{{ state_attr('sun.sun', 'elevation') }}"
    below: 5
  action:
    service: scene.turn_on
    entity_id: scene.evening

- id: sunrise
  alias: "Turn off lights at dawn"
  trigger:
    platform: numeric_state
    entity_id: sun.sun
    value_template: "{{ state_attr('sun.sun', 'elevation') }}"
    above: 0
  action:
    service: light.turn_off
    entity_id: all

- id: loadshedding_update_home_schedule
  alias: "Update loadshedding schedule"
  trigger:
    platform: mqtt
    topic: "loadshedding/home/next"
  action:
    service: input_datetime.set_datetime
    entity_id: input_datetime.loadshedding_home_next
    data:
      datetime: "{{ trigger.payload_json.next }}"

- id: loadshedding_warning
  alias: "Loadshedding 15 min warning"
  trigger:
    platform: template
    value_template: "{{ ((as_timestamp(states('sensor.date_time').replace(',', '')) | int) + 15*60) == (state_attr('input_datetime.loadshedding_home_next', 'timestamp') | int)  }}"
  condition:
    condition: numeric_state
    entity_id: sensor.loadshedding_stage
    above: 0
  action:
    - service: notify.mobile_app_dales_iphone_xs
      data:
        message: "Loadshedding in 15 min"
    - service: tts.google_cloud_say
      entity_id: media_player.apple_tv
      data:
        message: "Alert... Loadshedding starts in 15 minutes. Time to put on the kettle."

- id: business_time
  alias: "Business Time"
  trigger:
    - platform: state
      entity_id:
        - person.dale
      to: "home"
  action:
    - service: media_player.select_source
      entity_id: media_player.spotify_dale
      data:
        source: "Living Room"
    - service: media_player.play_media
      entity_id: media_player.spotify_dale
      data:
        media_content_id: "spotify:track:39l1UORIhuHvUWfxG53tRZ"
        media_content_type: music

- id: goodnight_turns_off_tv
  alias: "Turn off Apple TV and Samsung when activate Goodnight scene"
  trigger:
    platform: event
    event_type: call_service
    event_data:
      service_data:
        entity_id: scene.goodnight
      domain: scene
      service: turn_on
  action:
    service: script.turn_on
    target:
      entity_id: script.apple_tv_sleep

- id: internet_down
  alias: "Internet down"
  trigger:
    - platform: state
      entity_id: binary_sensor.google_ping
      to: "off"
  action:
    service: notify.mobile_app_dales_iphone_xs
    data:
      message: "Internet is down"

- id: internet_up
  alias: "Internet up"
  trigger:
    - platform: state
      entity_id: binary_sensor.google_ping
      to: "on"
  action:
    service: notify.mobile_app_dales_iphone_xs
    data:
      message: "Internet is up"

- id: enter_bedroom_when_dark
  alias: "Turn on bedroom light on entry after dark"
  trigger:
    - platform: state
      entity_id: sensor.dale_apple_watch_presence
      to: "bedroom"
  condition: "{{ state_attr('sun.sun', 'elevation') < -5 }}"
  action:
    service: switch.turn_on
    entity_id: switch.bedside_light

- id: enter_lounge_when_dark
  alias: "Turn on lounge lights on entry when dark"
  trigger:
    - platform: state
      entity_id: sensor.dale_apple_watch_presence
      to: "lounge"
  condition:
    - condition: and
      conditions:
        - condition: numeric_state
          entity_id: sun.sun
          attribute: elevation
          below: -5
        - condition: state
          entity_id: switch.shelf_light
          state: "off"
  action:
    service: switch.turn_on
    entity_id: switch.shelf_light

