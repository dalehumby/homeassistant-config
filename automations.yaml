- id: arrive_home
  alias: "Arrive Home"
  triggers:
    - trigger: zone
      entity_id: person.dale
      zone: zone.home
      event: enter
  actions:
    - action: notify.mobile_app_dales_iphone
      data:
        message: "Welcome home"

- id: internet_down
  alias: "Internet down"
  triggers:
    - trigger: state
      entity_id: binary_sensor.internet
      to: "off"
  actions:
    - action: notify.mobile_app_dales_iphone
      data:
        message: "Internet is down"

- id: internet_up
  alias: "Internet up"
  triggers:
    - trigger: state
      entity_id: binary_sensor.internet
      to: "on"
  actions:
    - action: notify.mobile_app_dales_iphone
      data:
        message: "Internet is up"

- id: entrance_lights_brighten
  alias: "Entrance light brighten"
  triggers:
    - trigger: state
      entity_id: binary_sensor.entrance_pir_occupancy
      from: "off"
      to: "on"
  actions:
    - action: scene.create
      data:
        scene_id: entrance_light_saved_scene
        snapshot_entities:
          - light.entrance_overhead
    - action: light.turn_on
      target:
        entity_id: light.entrance_overhead
      data:
        transition: 1
        brightness: 255
        color_temp: "{{ state_attr('switch.adaptive_lighting_home', 'color_temp_mired') }}"

- id: entrance_lights_restore
  alias: "Entrance light restore"
  triggers:
    - trigger: state
      entity_id: binary_sensor.entrance_pir_occupancy
      from: "on"
      to: "off"
  conditions:
    - condition: state
      entity_id: light.entrance_overhead
      state: "on"
  actions:
    - action: scene.turn_on
      data:
        entity_id: scene.entrance_light_saved_scene
        transition: 3

- id: laundry_start_reminder
  alias: Laundry reminder
  triggers:
    - trigger: time
      at: input_datetime.laundry_reminder
  actions:
    - action: notify.family
      data:
        message: "Don't forget your laundry booking"
    - action: tts.google_cloud_say
      entity_id:
        - media_player.kitchen_display
        - media_player.bedroom_speaker
        - media_player.lounge_speaker
      data_template:
        message: "{{ states('sensor.greeting') }}. Don't forget about your laundry"

- id: laundry_start
  alias: Laundry timer started
  triggers:
    - trigger: tag
      tag_id: f0a4261e-287b-481d-a93f-1bb33b2de291
  actions:
    - action: notify.family
      data:
        title: "Laundry timer started"
        message: "Reminder in {{ state_attr('timer.laundry', 'duration') }}"
    - action: timer.start
      target:
        entity_id: timer.laundry

- id: laundry_done_reminder
  alias: Laundry is done
  triggers:
    - trigger: event
      event_type: timer.finished
      event_data:
        entity_id: timer.laundry
  actions:
    - action: notify.family
      data:
        message: "Laundry done"
    - action: tts.google_cloud_say
      entity_id:
        - media_player.kitchen_display
        - media_player.bedroom_speaker
        - media_player.lounge_speaker
      data_template:
        message: "{{ states('sensor.greeting') }}. The laundry is done"

- id: rainfall_alert_morning
  alias: Rainfall on the way to work
  triggers:
    - trigger: numeric_state
      entity_id: sensor.precipitation_next_hour
      above: 0
    - trigger: time
      at: "08:15:00"
  conditions:
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: "on"
    - condition: zone
      entity_id: person.dale
      zone: zone.home
    - condition: time
      after: "08:15:00"
      before: "10:00:00"
    - condition: numeric_state
      entity_id: sensor.precipitation_next_hour
      above: 0
  actions:
    - action: notify.mobile_app_dales_iphone
      data:
        title: "{{ state_attr('sensor.precipitation_next_hour', 'title') }}"
        message: "{{ states('sensor.precipitation_next_hour') }} mm in next hour"
    - action: notify.mobile_app_dales_iphone
      data:
        message: update_complications

- id: rainfall_alert_afternoon
  alias: Rainfall on the way home
  triggers:
    - trigger: time
      at: "17:00:00"
    - trigger: time
      at: "11:55:00"
    - trigger: numeric_state
      entity_id: sensor.precipitation_next_hour
      above: 0
  conditions:
    - condition: zone
      entity_id: person.dale
      zone: zone.work
    - or:
        - condition: time
          after: "11:55:00"
          before: "12:10:00"
        - condition: time
          after: "17:00:00"
    - condition: numeric_state
      entity_id: sensor.precipitation_next_hour
      above: 0
  actions:
    - action: notify.mobile_app_dales_iphone
      data:
        title: "{{ state_attr('sensor.precipitation_next_hour', 'title') }}"
        message: "{{ states('sensor.precipitation_next_hour') }} mm in next hour"
    - action: notify.mobile_app_dales_iphone
      data:
        message: update_complications

- id: rainfall_alert_away
  alias: Rain alert while outdoors
  triggers:
    - trigger: numeric_state
      entity_id: sensor.precipitation_next_hour
      above: 0
  conditions:
    - condition: state
      entity_id: person.dale
      state: "not_home"
    - not:
        - condition: state
          entity_id: sensor.dales_iphone_connection_type
          state: "Wi-Fi"
  actions:
    - action: notify.mobile_app_dales_iphone
      data:
        title: "{{ state_attr('sensor.precipitation_next_hour', 'title') }}"
        message: "{{ states('sensor.precipitation_next_hour') }} mm in next hour"
    - action: notify.mobile_app_dales_iphone
      data:
        message: update_complications

- id: rainfall_alert_frontdoor
  alias: Rain alert at front door
  triggers:
    - trigger: state
      entity_id: binary_sensor.entrance_pir_occupancy
      from: "off"
      to: "on"
  conditions:
    - condition: numeric_state
      entity_id: sensor.precipitation_next_hour
      above: 0
  actions:
    - action: light.turn_on
      data:
        effect: okay
      target:
        entity_id: light.entrance_overhead

- id: lunch_reminer_on
  alias: Turn on lunch reminder
  triggers:
    - trigger: tag
      tag_id: 9c666023-7e07-491d-be90-c8be0d53b3b5
  conditions:
    - condition: time
      after: "18:00:00"
  actions:
    - action: automation.turn_on
      target:
        entity_id: automation.lunch_reminder
    - action: tts.google_cloud_say
      entity_id: media_player.kitchen_display
      data_template:
        message: "Okay, I'll remind you about your lunch tomorrom morning."

- id: lunch_reminer_off
  alias: Turn off lunch reminder
  triggers:
    - trigger: tag
      tag_id: 9c666023-7e07-491d-be90-c8be0d53b3b5
  conditions:
    - condition: time
      before: "10:00:00"
  actions:
    - action: automation.turn_off
      target:
        entity_id: automation.lunch_reminder

- id: lunch_reminder
  alias: Lunch reminder
  triggers:
    - trigger: state
      entity_id: binary_sensor.entrance_pir_occupancy
      from: "off"
      to: "on"
  conditions:
    - condition: time
      before: "10:00:00"
  actions:
    - action: light.turn_on
      data:
        effect: okay
      target:
        entity_id: light.entrance_overhead
    - action: notify.mobile_app_dales_iphone
      data:
        message: "Remember your lunch"
    - action: automation.turn_off
      target:
        entity_id: automation.lunch_reminder

- id: dishwasher_leak
  alias: Dishwasher leak
  triggers:
    - trigger: state
      entity_id: binary_sensor.dishwasher_leak_water_leak
      to: "on"
  actions:
    - action: notify.family
      data:
        title: "Dishwasher leak"
        message: "Water detected under the dishwasher"
        data:
          push:
            interruption-level: critical
    - action: tts.google_cloud_say
      entity_id:
        - media_player.kitchen_display
        - media_player.bedroom_speaker
        - media_player.lounge_speaker
      data_template:
        message: >
          "{{ states('sensor.greeting') }}. Water has been detected under the dishwasher.
           Please check for leaks... The shutoff valve is on the kitchen sink tap"

- id: bathroom_leak
  alias: Bathroom leak
  triggers:
    - trigger: state
      entity_id: binary_sensor.bathroom_leak_water_leak
      to: "on"
  actions:
    - action: notify.family
      data:
        title: "Bathroom leak"
        message: "Water detected under the washing machine"
        data:
          push:
            interruption-level: critical
    - action: tts.google_cloud_say
      entity_id:
        - media_player.kitchen_display
        - media_player.bedroom_speaker
        - media_player.lounge_speaker
      data_template:
        message: >
          "{{ states('sensor.greeting') }}. Water has been detected in the bathroom under the washing machine.
           Please check for leaks... The shutoff valve is on the bathroom ceiling, next to the basin."

- id: start_robot_vacuum
  alias: Start robot vacuum
  triggers:
    - trigger: state
      entity_id: zone.home
      to: "0"
    - trigger: time
      at: "11:00:00"
  conditions:
    - condition: state
      entity_id: input_boolean.run_vacuum_today
      state: "on"
    - condition: state
      entity_id: zone.home
      state: "0"
    - condition: time
      after: "09:00:00"
    - condition: time
      before: "20:00:00"
  actions:
    - action: vacuum.start
      target:
        entity_id: vacuum.vader

- id: start_robot_vacuum_weekday
  alias: Start robot vacuum limited
  description: "Limited weekday cleanup: Entrance, kitchen, bedroom"
  triggers:
    - trigger: time
      at: "17:00:00"
  conditions:
    - condition: state
      entity_id: input_boolean.run_vacuum_today
      state: "on"
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: "on"
  actions:
    - action: xiaomi_miio.vacuum_clean_segment
      data:
        segments: [20, 16, 17]
      target:
        entity_id: vacuum.vader

- id: run_vacuum_max_once_per_day
  alias: Run vacuum max once per day
  triggers:
    - trigger: state
      entity_id: vacuum.vader
      to: "cleaning"
  actions:
    - action: input_boolean.turn_off
      target:
        entity_id: input_boolean.run_vacuum_today

- id: reset_run_vacuum_today
  alias: Reset run vacuum today
  triggers:
    - trigger: time
      at: "03:00:00"
  conditions:
    - condition: state
      entity_id: input_boolean.guest_mode
      state: "off"
  actions:
    - action: input_boolean.turn_on
      target:
        entity_id: input_boolean.run_vacuum_today

- id: vacuum_finished_cleaning
  alias: Vacuum finished cleaning
  triggers:
    - trigger: state
      entity_id: vacuum.vader
      from: "cleaning"
      to: "returning"
  conditions:
    - condition: state
      entity_id: binary_sensor.vacation
      state: "off"
  actions:
    - action: counter.decrement
      target:
        entity_id: counter.empty_vacuum_bin
    - condition: numeric_state
      entity_id: counter.empty_vacuum_bin
      below: 1
    - action: xiaomi_miio.vacuum_goto
      target:
        entity_id: vacuum.vader
      data:
        x_coord: '28566'
        y_coord: '27749'
    - wait_for_trigger:
        - trigger: state
          entity_id: vacuum.vader
          to: "idle"
    - action: vacuum.locate
      target:
        entity_id: vacuum.vader

- id: vacuum_water_tank_in
  alias: Vacuum water tank reattached
  triggers:
    - trigger: state
      entity_id: binary_sensor.vader_mop_attached_2
      from: "off"
      to: "on"
  actions:
    - action: counter.reset
      target:
        entity_id: counter.empty_vacuum_bin

- id: storeroom_light
  alias: Storeroom light
  triggers:
    - trigger: state
      entity_id: binary_sensor.storeroom_pir_occupancy
      to: "on"
  conditions:
    - condition: state
      entity_id: binary_sensor.hall_pir_occupancy
      state: "on"
  actions:
    - action: light.turn_on
      data:
        color_temp: 250
        brightness: 255
        transition: 1
      target:
        entity_id: light.storeroom_overhead
    - wait_for_trigger:
        - trigger: state
          entity_id: binary_sensor.storeroom_pir_occupancy
          to: "off"
          for: "00:01:00"
    - action: light.turn_off
      data:
        transition: 1
      target:
        entity_id: light.storeroom_overhead

- id: bedroom_floor_lighting_on
  alias: Bedroom floor night lighting on
  triggers:
    - trigger: state
      entity_id: binary_sensor.bedroom_pir_occupancy
      to: "on"
  conditions:
    - condition: state
      entity_id: light.bedside_lights
      state: "off"
    - condition: state
      entity_id: binary_sensor.illuminance_bright
      state: "off"
  actions:
    - choose:
        - conditions:
            - condition: time
              after: input_datetime.dale_alarm_time
              before: "12:00:00"
            - condition: state
              entity_id: binary_sensor.workday_sensor
              state: "on"
          sequence:
            - action: light.turn_on
              data:
                color_temp: 370
                brightness: 255
                transition: 3
              target:
                entity_id: light.bedroom_floor
      default:
        - action: light.turn_on
          data:
            color_name: red
            brightness: 50
          target:
            entity_id: light.bedroom_floor

- id: bedroom_floor_lighting_off
  alias: Bedroom floor night lighting off
  triggers:
    - trigger: state
      entity_id: binary_sensor.bedroom_pir_occupancy
      to: "off"
    - trigger: state
      entity_id: binary_sensor.bedroom_cupboard_pir_occupancy
      to: "off"
  conditions:
    - condition: state
      entity_id: light.bedside_lights
      state: "off"
    - condition: state
      entity_id: binary_sensor.bedroom_cupboard_pir_occupancy
      state: "off"
    - condition: state
      entity_id: binary_sensor.bedroom_pir_occupancy
      state: "off"
  actions:
    - action: light.turn_off
      data:
        transition: 3
      target:
        entity_id: light.bedroom_floor

- id: bedroom_bedside_light_switch
  alias: Bedroom bedside light switch
  triggers:
    - trigger: device
      domain: mqtt
      device_id: bc5b0d803604dafae7adb68072261271
      type: action
      subtype: single_left
      id: single_left
    - trigger: device
      domain: mqtt
      device_id: bc5b0d803604dafae7adb68072261271
      type: action
      subtype: double_left
      id: double_left
    - trigger: device
      domain: mqtt
      device_id: bc5b0d803604dafae7adb68072261271
      type: action
      subtype: single_right
      id: single_right
    - trigger: device
      domain: mqtt
      device_id: bc5b0d803604dafae7adb68072261271
      type: action
      subtype: double_right
      id: double_right
    - trigger: device
      domain: mqtt
      device_id: bc5b0d803604dafae7adb68072261271
      type: action
      subtype: single_both
      id: single_both
  actions:
    - choose:
        - conditions:
            - condition: trigger
              id: single_left
          sequence:
            - action: light.toggle
              target:
                entity_id: light.bedroom_overhead
        - conditions:
            - condition: trigger
              id: single_right
          sequence:
            - action: light.toggle
              target:
                entity_id:
                  - light.bedside_lights
                  - light.bedroom_floor
        - conditions:
            - condition: trigger
              id: double_left
          sequence:
            - action: light.toggle
              target:
                entity_id: light.bedside_dale
        - conditions:
            - condition: trigger
              id: double_right
          sequence:
            - action: light.toggle
              target:
                entity_id: light.bedside_mark
        - conditions:
            - condition: trigger
              id: single_both
          sequence:
            - action: scene.turn_on
              target:
                entity_id: scene.bedroom_winddown

- id: easy_wakeup
  alias: Easy wakeup
  triggers:
    - trigger: template
      value_template: "{{ (state_attr('input_datetime.dale_alarm_time', 'timestamp') - 10*60) | timestamp_custom('%H:%M', False) == states('sensor.time') }}"
  conditions:
    - condition: state
      entity_id: binary_sensor.vacation
      state: "off"
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: "on"
    - condition: state
      entity_id: input_boolean.dale_alarm_enable
      state: "on"
  actions:
    - action: script.easy_wakeup

- id: kitchen_nightlight_on
  alias: Kitchen night lighting on
  triggers:
    - trigger: state
      entity_id: binary_sensor.kitchen_pir_occupancy
      to: "on"
  conditions:
    - condition: state
      entity_id: binary_sensor.hall_pir_occupancy
      state: "on"
    - condition: state
      entity_id: light.kitchen_overhead
      state: "off"
    - condition: state
      entity_id: binary_sensor.illuminance_bright
      state: "off"
    - condition: numeric_state
      entity_id: sensor.kitchen_illuminance_average
      below: 10
  actions:
    - choose:
        - conditions:
            - condition: time
              after: input_datetime.dale_alarm_time
              before: "12:00:00"
          sequence:
            - action: light.turn_on
              data:
                transition: 3
              target:
                entity_id: light.kitchen_counter
      default:
        - action: light.turn_on
          data:
            brightness: 50
          target:
            entity_id: light.kitchen_overhead_1

- id: kitchen_nightlight_off
  alias: Kitchen night lighting off
  triggers:
    - trigger: state
      entity_id: binary_sensor.kitchen_pir_occupancy
      to: "off"
  conditions:
    - condition: state
      entity_id: light.kitchen_overhead_1
      state: "on"
    - condition: state
      entity_id: light.kitchen_overhead_4
      state: "off"
  actions:
    - action: light.turn_off
      data:
        transition: 3
      target:
        entity_id: light.kitchen_overhead_1

- id: diningroom_overhead_light_dim
  alias: Diningroom overhead light dimming
  triggers:
    - trigger: state
      entity_id: binary_sensor.diningroom_chair_occupancy
      to: "on"
  conditions:
    - condition: numeric_state
      entity_id: light.diningroom_overhead
      attribute: brightness
      above: 77
  actions:
    - action: light.turn_on
      data:
        brightness: 77
        transition: 3
      target:
        entity_id: light.diningroom_overhead

- id: kitchen_fridge_too_warm
  alias: Fridge too warm
  triggers:
    - trigger: numeric_state
      entity_id: sensor.fridge_air_temperature
      above: 7
      for:
        minutes: 15
  actions:
    - action: notify.family
      data:
        title: Fridge temperature
        message: "{{ states('sensor.fridge_air_temperature') |int }} °C is too warm"
        data:
          push:
            interruption-level: critical
    - action: tts.google_cloud_say
      entity_id:
        - media_player.kitchen_display
        - media_player.bedroom_speaker
        - media_player.lounge_speaker
      data_template:
        message: >
          "{{ states('sensor.greeting') }}. The fridge is {{ states('sensor.fridge_air_temperature') | int }} degrees.
           Please check if the door is closed."

- id: bedroom_thermostat_night
  alias: Set bedroom sleep temperature
  triggers:
    - trigger: time
      at: "19:00"
  actions:
    - action: climate.set_temperature
      target:
        entity_id: climate.bedroom_thermostat
      data:
        temperature: 18

- id: bedroom_thermostat_day
  alias: Set bedroom day temperature
  triggers:
    - trigger: template
      value_template: "{{ (state_attr('input_datetime.dale_alarm_time', 'timestamp') - 60*60) | timestamp_custom('%H:%M', False) == states('sensor.time') }}"
  actions:
    - action: climate.set_temperature
      target:
        entity_id: climate.bedroom_thermostat
      data:
        temperature: 21

- id: all_lights_off
  alias: All lights off
  triggers:
    - trigger: numeric_state
      entity_id: zone.home
      below: 1  # Unfortunatley no '== 0' in HA
  actions:
    - action: light.turn_off
      target:
        entity_id: all

- id: day_lights_off
  alias: Day lights off
  triggers:
    - trigger: state
      entity_id: binary_sensor.illuminance_bright
      from: "off"
      to: "on"
  actions:
    - action: light.turn_off
      target:
        entity_id:
          - light.hall_lights
          - light.bedroom_lights
          - light.kitchen_lights
          - light.lounge_lights

- id: all_lights_on
  alias: All lights on
  triggers:
    - trigger: numeric_state
      entity_id: zone.home
      above: 0
    - trigger: state
      entity_id: binary_sensor.illuminance_bright
      from: "on"
      to: "off"
  conditions:
    - condition: numeric_state
      entity_id: zone.home
      above: 0
    - condition: state
      entity_id: binary_sensor.illuminance_bright
      state: "off"
  actions:
    - action: script.adaptive_lights_on

- id: bathroom_light_on
  alias: Bathroom light on
  triggers:
    - trigger: state
      entity_id: binary_sensor.bathroom_pir_occupancy
      to: "on"
  conditions:
    - condition: state
      entity_id: light.bathroom_overhead
      state: "off"
  actions:
    - choose:
        - conditions:
            - condition: time
              after: "00:00:00"
              before: input_datetime.dale_alarm_time
          sequence:
            - action: light.turn_on
              target:
                entity_id: light.bathroom_overhead
              data:
                brightness: 13
                color_name: red
      default:
        - action: light.turn_on
          target:
            entity_id: light.bathroom_overhead
          data:
            # Set brightness, color temp so it doesn't start at eg 100% blinding you, then ramp down to 20% at night
            brightness_pct: "{{ state_attr('switch.adaptive_lighting_bathroom', 'brightness_pct') }}"
            color_temp: "{{ state_attr('switch.adaptive_lighting_bathroom', 'color_temp_mired') }}"
        - wait_template: >
            {{ state_attr('light.bathroom_overhead', 'brightness') != None and
               state_attr('light.bathroom_overhead', 'brightness') > 0 }}
          timeout: 5
        - choose:
            - conditions:
                # Turn the bathroom cabinet light on only if we're above minimum overhead brightness
                - condition: numeric_state
                  entity_id: light.bathroom_overhead
                  attribute: brightness
                  above: 103
              sequence:
                - action: light.turn_on
                  target:
                    entity_id: light.bathroom_cabinet

- id: bathroom_light_off
  alias: Bathroom light off
  triggers:
    - trigger: state
      entity_id: binary_sensor.bathroom_pir_occupancy
      to: "off"
      for:
        minutes: 5
    - trigger: state
      entity_id: binary_sensor.bathroom_shower_occupancy
      to: "off"
      for:
        minutes: 5
  conditions:
    - condition: state
      entity_id: binary_sensor.bathroom_pir_occupancy
      state: "off"
    - condition: state
      entity_id: binary_sensor.bathroom_shower_occupancy
      state: "off"
  actions:
    - action: light.turn_off
      target:
        entity_id: light.bathroom_lights
      data:
        transition: 3

- id: bathroom_light_switch
  alias: Bathroom light switch
  triggers:
    - trigger: device
      domain: mqtt
      device_id: 8858514f66d8e971f98241adfeec2c3f
      type: action
      subtype: single_right
      id: single_right
    - trigger: device
      domain: mqtt
      device_id: 8858514f66d8e971f98241adfeec2c3f
      type: action
      subtype: double_right
      id: double_right
  actions:
    - choose:
        - conditions:
            - condition: trigger
              id: single_right
          sequence:
            - action: light.toggle
              target:
                entity_id: light.bathroom_overhead
        - conditions:
            - condition: trigger
              id: double_right
          sequence:
            - choose:
                - conditions:
                    - condition: template
                      value_template: >
                        {{ state_attr('light.bathroom_overhead', 'brightness') == None or
                           state_attr('light.bathroom_overhead', 'brightness') < 255 }}
                  sequence:
                    - action: light.turn_on
                      target:
                        entity_id: light.bathroom_overhead
                      data:
                        brightness: 255
                        color_temp: 370
              default:
                - action: adaptive_lighting.apply
                  data:
                    lights:
                      - light.bathroom_overhead

- id: bathroom_towelrail_on
  alias: Bathroom towelrail when showering
  triggers:
    - trigger: state
      entity_id: binary_sensor.bathroom_shower_occupancy
      to: "on"
    - trigger: device
      domain: mqtt
      device_id: 627eeddb3ce73a0ec62112b47880a07f
      type: action
      subtype: "on"
  actions:
    - action: switch.turn_on
      target:
        entity_id: switch.bathroom_towelrail
    - action: timer.start
      target:
        entity_id: timer.bathroom_towelrail

- id: bathroom_towelrail_timer_start  # In case the towel rail is manually turned on
  alias: Start auto-off bathroom towelrail timer
  triggers:
    - trigger: state
      entity_id: switch.bathroom_towelrail
      from: "off"
      to: "on"
  actions:
    - action: timer.start
      target:
        entity_id: timer.bathroom_towelrail

- id: bathroom_towelrail_off
  alias: Bathroom towelrail off when timer expires
  triggers:
    - trigger: event
      event_type:
        - timer.finished
        - timer.cancelled
      event_data:
        entity_id: timer.bathroom_towelrail
  actions:
    - action: switch.turn_off
      target:
        entity_id: switch.bathroom_towelrail

- id: adaptive_lights_on_action
  alias: iOS action to turn adaptive lighting on
  triggers:
    - trigger: event
      event_type: ios.action_fired
      event_data:
        actionName: "Auto lights on"
  actions:
    - action: script.adaptive_lights_on

- id: relax_scene_on_action
  alias: iOS action to activate relax scene script
  triggers:
    - trigger: event
      event_type: ios.action_fired
      event_data:
        actionName: "Activate relax script"
  actions:
    - action: script.relax_scene_on

- id: hall_nightlight_on
  alias: Hall night lighting on
  triggers:
    - trigger: state
      entity_id: binary_sensor.hall_pir_occupancy
      to: "on"
  conditions:
    - condition: state
      entity_id: light.hall_lights
      state: "off"
    - condition: numeric_state
      entity_id: sensor.hall_pir_illuminance
      below: 1
  actions:
    - action: light.turn_on
      target:
        entity_id: light.hall_cabinet
      data:
        color_name: red
        brightness: 3
        transition: 1
        effect: Solid

- id: hall_nightlight_off
  alias: Hall night lighting off
  triggers:
    - trigger: state
      entity_id: binary_sensor.hall_pir_occupancy
      to: "off"
  conditions:
    - condition: state
      entity_id: light.hall_lights
      state: "off"
  actions:
    - action: light.turn_off
      target:
        entity_id: light.hall_cabinet
      data:
        transition: 3

- id: nspanel_entrance_screen_dark
  alias: NSPanel entrance screen when dark
  triggers:
    - trigger: state
      entity_id: light.entrance_overhead
      to: "off"
  actions:
    - action: mqtt.publish
      data:
        topic: nspanelpro/nspanel_entrance/config/update
        payload: >
          { "screen-off-timeout": "120000" }

- id: nspanel_entrance_screen_bright
  alias: NSPanel entrance screen when bright
  triggers:
    - trigger: state
      entity_id: light.entrance_overhead
      to: "on"
  actions:
    - action: mqtt.publish
      data:
        topic: nspanelpro/nspanel_entrance/config/update
        payload: >
          { "screen-off-timeout": "2147483647" }
    - action: mqtt.publish
      data:
        topic: nspanelpro/nspanel_entrance/command/device
        payload: >
          { "command": "wake_up" }

- id: nspanel_entrance_screen_wakeup
  alias: NSPanel entrance screen wake up
  triggers:
    - trigger: state
      entity_id: binary_sensor.entrance_pir_occupancy
      to: "on"
    - trigger: state
      entity_id: binary_sensor.hall_pir_occupancy
      to: "on"
  actions:
    - action: mqtt.publish
      data:
        topic: nspanelpro/nspanel_entrance/command/device
        payload: >
          { "command": "wake_up" }

- id: nspanel_bedroom_screen_dark
  alias: NSPanel bedroom screen when dark
  triggers:
    trigger: state
    entity_id:
      - event.nspanel_bedroom_light
    attribute: event_type
    to: light_below
  actions:
    - action: mqtt.publish
      data:
        topic: nspanelpro/nspanel_bedroom/config/update
        payload: >
          { "screen-off-timeout": "60000" }

- id: nspanel_bedroom_screen_bright
  alias: NSPanel bedroom screen when bright
  triggers:
    trigger: state
    entity_id:
      - event.nspanel_bedroom_light
    attribute: event_type
    to:
      - light_normal
      - light_above
  actions:
    - action: mqtt.publish
      data:
        topic: nspanelpro/nspanel_bedroom/config/update
        payload: >
          { "screen-off-timeout": "2147483647" }
    - action: mqtt.publish
      data:
        topic: nspanelpro/nspanel_bedroom/command/device
        payload: >
          { "command": "wake_up" }

- id: cat_doorbell
  alias: Cat doorbell
  triggers:
    - trigger: device
      domain: mqtt
      device_id: 1fc5be6bfa2096e47274790a481f8b1a
      type: action
      subtype: "on"
  actions:
    - action: notify.mobile_app_dales_iphone
      data:
        title: "Meow?"
        message: "A Tigger wants in"
    - action: light.turn_on
      data:
        effect: okay
      target:
        entity_id: light.entrance_overhead
    - action: tts.google_cloud_say
      entity_id:
        - media_player.kitchen_display
        - media_player.bedroom_speaker
        - media_player.lounge_speaker
      data_template:
        message: "{{ states('sensor.greeting') }}. A hungry Tigger is at the door."

- id: vacation_lights_on
  alias: Vacation lights on
  triggers:
    - trigger: sun
      event: sunset
      offset: "-00:30:00"
  conditions:
    - condition: state
      entity_id: binary_sensor.vacation
      state: "on"
  actions:
    - action: light.turn_on
      target:
        entity_id:
          - light.kitchen_lights

- id: vacation_lights_off
  alias: Vacation lights off
  triggers:
    - trigger: time
      at: "22:30:00"  # Must be after the latest sunset in the year
  conditions:
    - condition: state
      entity_id: binary_sensor.vacation
      state: "on"
  actions:
    - action: light.turn_off
      target:
        entity_id: all
